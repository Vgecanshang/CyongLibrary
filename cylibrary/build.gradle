apply plugin: 'com.android.library'
group = 'com.github.Vgecanshang'
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'kotlin-android'
android {
    compileSdkVersion 26



    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue "drawable", "icon_loading_logo", "@drawable/ic_loading_rotate"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

}

def supportVersion = "26.1.0"
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.github.bumptech.glide:glide:3.7.0'//glide处理图片
//    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'io.reactivex:rxandroid:1.2.1'
//    implementation 'io.reactivex:rxjava:1.1.6'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'com.orhanobut:logger:1.15'
    implementation 'org.litepal.android:core:1.5.1'//轻量级数据库litepal

    //paging
//    implementation 'android.arch.paging:runtime:1.0.0'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    noinspection GradleCompatible

    implementation 'com.android.support:support-v4:' + supportVersion
    implementation 'com.android.support:design:' + supportVersion

    implementation 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}
repositories {
    mavenCentral()
}

//------下面的必加,加上下面的作用是在上传后会带上注释,不然会发现没有注释------

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}

